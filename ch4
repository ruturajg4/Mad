unit 4 1
import java.net.*; 
public class InetDemo 
{
public static void main(String[] args) 
{ 
	try 
	{
		InetAddress ip-InetAddress.getByName("localhost");
		System.out.println("Host name: "+ip.getHostName());
		System.out.println("IP Address: "+ip.getHostAddress());
	}
	catch (Exception e) 
	{
		System.out.println(e);
	}
}
}

unit 4 2
import java.net.MalformedURLException;
import java.net.URL;

public class URLDemo {
    public static void main(String[] args)throws MalformedURLException {
        URL hp=new URL("https://www.msbte.org.in");
        System.out.println("Protocol: "+hp.getProtocol());
        System.out.println("Port: "+hp.getPort());
        System.out.println("Host: "+hp.getHost());
        System.out.println("File: "+hp.getFile());
        System.out.println("Ext: "+hp.toExternalForm());
    }
}


unit 4 3
import java.io.*;
import java.net.Socket;

public class Client {
    public static void main(String[] args) throws Exception {
        Socket s=new Socket("localhost",1234);
        DataInputStream din=new DataInputStream(s.getInputStream());
        DataOutputStream dout=new DataOutputStream(s.getOutputStream());
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        String s1="";String s2="";
        while (!s1.equals("stop")) {
            s1=br.readLine();
            dout.writeUTF(s1);
            dout.flush();
            s2=din.readUTF();
            System.out.println("server says "+s2);
        }
    }
}

import java.io.*;
import java.net.*;

public class Server {
    public static void main(String[] args) throws Exception {
        ServerSocket ss=new ServerSocket(1234);
        Socket s=ss.accept();
        DataInputStream din=new DataInputStream(s.getInputStream());
        DataOutputStream dout=new DataOutputStream(s.getOutputStream());
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        String s1="";String s2="";
        while (!s1.equals("stop")){
            s1=din.readUTF();
            System.out.println("Client says = "+s1);
            s2=br.readLine();
            dout.writeUTF(s2);
            dout.flush();
        }
    }
}

unit 4 4
import java.io.*;
import java.net.*;

public class UDPClient 
{
    public static void main(String[] args) throws Exception 
    {
        DatagramSocket ds=new DatagramSocket();
        String s1="",s2="";
        byte[] recbyte=new byte[1024];
        byte[] sendbyte=new byte[1024];
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        System.out.println("UDP client socket is created");

        InetAddress ip=InetAddress.getLocalHost();
        do {
            System.out.println("Enter Client Message");
            s1=br.readLine();
            sendbyte=s1.getBytes();
            if (s1.equals("stop")){
                System.out.println("Terminated");
                DatagramPacket dp=new DatagramPacket(sendbyte, sendbyte.length,ip,2000);
                ds.send(dp);
                break;
            }
            DatagramPacket dp=new DatagramPacket(sendbyte, sendbyte.length,ip,2000);
            ds.send(dp);

            DatagramPacket dp1=new DatagramPacket(recbyte, recbyte.length);
            ds.receive(dp1);
            s2=new String(dp1.getData(),0, dp1.getLength());
            System.out.println("Server says = "+s2);
    }while (true);
}

import java.io.*;
import java.net.*;

public class UDPServer {
    public static void main(String[] args) throws Exception {
        DatagramSocket ds = new DatagramSocket(2000);
        String s1 = "", s2 = "";
        byte[] recbyte = new byte[1024];
        byte[] sendbyte = new byte[1024];
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        System.out.println("UDP server socket is created");

        do {
            DatagramPacket dp=new DatagramPacket(recbyte, recbyte.length);
            ds.receive(dp);
            s1=new String(dp.getData(),0,dp.getLength());
            if (s1.equals("stop")){
                System.out.println("Terminated");
                break;
            }
            System.out.println("Client says "+s1);

            InetAddress ip=dp.getAddress();
            System.out.println("Enter Server Message");
            s2= br.readLine();
            sendbyte=s2.getBytes();
            DatagramPacket dp1=new DatagramPacket(sendbyte, sendbyte.length,ip,dp.getPort());
            ds.send(dp1);
        }while (true);
    }
}
